# This playbook was created by Natalie to get Ansible01 and Ansible02 ready for OpenIO installation
# It checks if SELinux and AppArmor exist
# If so, it ensures that SELinux and AppArmor are disabled, then restarts

- name: Ensure prerequisites for installing OpenIO are met
  hosts: openio 
  tasks:
    - name: check if SELinux file exists
      stat:
        path: "/etc/selinux/config"
      register: selinux_check

    - name: disable SELinux
      shell:
        "sudo sed -i -e 's@^SELINUX=enforcing$@SELINUX=disabled@g' /etc/selinux/config && sudo setenforce 0"
      when: selinux_check.stat.exists
      # This will fail if SELinux is already disabled. This allows the playbook to continue
      ignore_errors: yes

    - name: check if AppArmor exists
      stat:
        path: "/etc/default/grub.d/apparmor.cfg"
      register: apparmor_check

    - name: disable AppArmor
      shell:
        "sudo echo 'GRUB_CMDLINE_LINUX_DEFAULT apparmor=0\"'> /etc/default/grub.d/apparmor.cfg && sudo update-grub"
      when: apparmor_check.stat.exists

    - name: Ensure system is up to date (Ubuntu)
      shell:
        "sudo apt update -y && sudo apt upgrade -y"
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Ensure system is up to date (CentOS/Rocky)
      shell:
        "sudo yum update -y -q"
      when: ansible_distribution == "CentOS" or ansible_distribution == "Rocky"

    - name: Ubuntu firewall rules
      shell:
        "sudo ufw allow 6006/tcp && sudo ufw allow 6006/udp && sudo ufw allow 6007/tcp && sudo ufw allow 6007/udp"
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: CentOS/Rocky Firewall Rules
      shell:
        "sudo firewall-cmd --add-port=6006/tcp --permanent && sudo firewall-cmd --add-port=6006/udp --permanent && sudo firewall-cmd --add-port=6007/tcp --permanent && sudo firewall-cmd --add-port=6007/udp --permanent"
      when: ansible_distribution == "CentOS" or ansible_distribution == "Rocky"

    - name: reboot the servers
      become: yes
      reboot:
        reboot_timeout: 300

